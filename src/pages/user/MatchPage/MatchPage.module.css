/* 
 * Estilos para o componente MatchPage
 * 
 * Este arquivo define os estilos para a página de match de pets, incluindo:
 * - Suporte a modo claro e escuro
 * - Layout responsivo
 * - Animações e transições
 * - Efeitos de hover e interações
 */

/* Variáveis de cores para modo claro e escuro */
:root {
  /* Modo claro */
  --light-bg: #f5f5f0; /* beige */
  --light-text: #333333;
  --light-card-bg: #ffffff;
  --light-card-border: #e0e0e0;
  --light-card-hover: #f9f9f9;
  --light-accent: #d35400; /* dark orange */
  --light-secondary: #f0f0e6;
  --light-input-bg: #ffffff;
  --light-input-border: #d0d0d0;
  --light-input-focus: #d35400;
  --light-button-bg: #d35400;
  --light-button-text: #ffffff;
  --light-button-hover: #b34700;
  --light-error: #e74c3c;
  --light-success: #2ecc71;
  
  /* Modo escuro */
  --dark-bg: #121212;
  --dark-text: #f0f0f0;
  --dark-card-bg: #1e1e1e;
  --dark-card-border: #333333;
  --dark-card-hover: #2a2a2a;
  --dark-accent: #ffd700; /* yellow */
  --dark-secondary: #1a1a1a;
  --dark-input-bg: #2a2a2a;
  --dark-input-border: #444444;
  --dark-input-focus: #ffd700;
  --dark-button-bg: #ffd700;
  --dark-button-text: #121212;
  --dark-button-hover: #e6c300;
  --dark-error: #e74c3c;
  --dark-success: #2ecc71;
}

/* Container principal */
.matchContainer {
  min-height: 100vh;
  padding: 2rem;
  background-color: var(--color-background);
  transition: all 0.3s ease;
}

/* Modo escuro */
.darkMode {
  background-color: var(--color-background-dark);
  color: var(--color-text-light);
}

/* Conteúdo do match */
.matchContent {
  max-width: 800px;
  margin: 0 auto;
  opacity: 0;
  transform: translateY(20px);
  transition: all 0.5s ease;
}

.visible {
  opacity: 1;
  transform: translateY(0);
}

/* Título e subtítulo */
.title {
  font-size: 2.5rem;
  color: var(--color-primary);
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  gap: 1rem;
}

.titleIcon {
  font-size: 2rem;
}

.subtitle {
  font-size: 1.2rem;
  color: var(--color-text-secondary);
  margin-bottom: 2rem;
}

/* Formulário */
.form {
  background-color: var(--color-card);
  padding: 2rem;
  border-radius: 15px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.formGroup {
  margin-bottom: 1.5rem;
}

.formGroup label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
  color: var(--color-text);
}

.inputIcon {
  margin-right: 0.5rem;
  color: var(--color-primary);
}

input[type="text"],
input[type="number"],
select {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid var(--color-border);
  border-radius: 8px;
  font-size: 1rem;
  transition: all 0.3s ease;
}

input[type="text"]:focus,
input[type="number"]:focus,
select:focus {
  border-color: var(--color-primary);
  box-shadow: 0 0 0 2px var(--color-primary-light);
  outline: none;
}

.inputError {
  border-color: var(--color-error) !important;
}

.errorText {
  color: var(--color-error);
  font-size: 0.875rem;
  margin-top: 0.25rem;
}

.checkboxGroup {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  margin-bottom: 1.5rem;
}

.checkboxGroup label {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
}

.checkboxGroup input[type="checkbox"] {
  width: 1.2rem;
  height: 1.2rem;
  cursor: pointer;
}

.multiSelect {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 1rem;
  margin-top: 0.5rem;
}

.multiSelect label {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 4px;
  transition: background-color 0.3s ease;
}

.multiSelect label:hover {
  background-color: var(--color-background-secondary);
}

.multiSelect input[type="checkbox"] {
  width: 1.2rem;
  height: 1.2rem;
  cursor: pointer;
}

.buttonGroup {
  display: flex;
  gap: 1rem;
  margin-top: 2rem;
}

.saveButton,
.searchButton {
  flex: 1;
  padding: 1rem;
  border: none;
  border-radius: 8px;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  transition: all 0.3s ease;
}

.saveButton {
  background-color: var(--color-primary-light);
  color: var(--color-text);
}

.searchButton {
  background-color: var(--color-primary);
  color: var(--color-text-light);
}

.saveButton:hover,
.searchButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.saveButton:disabled,
.searchButton:disabled {
  opacity: 0.7;
  cursor: not-allowed;
  transform: none;
}

.loading {
  position: relative;
  pointer-events: none;
}

.loading::after {
  content: '';
  position: absolute;
  width: 1.5rem;
  height: 1.5rem;
  border: 2px solid transparent;
  border-top-color: currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.errorMessage {
  background-color: var(--color-error-light);
  color: var(--color-error);
  padding: 1rem;
  border-radius: 8px;
  margin-bottom: 1rem;
}

.successMessage {
  background-color: var(--color-success-light);
  color: var(--color-success);
  padding: 1rem;
  border-radius: 8px;
  margin-bottom: 1rem;
}

/* Responsividade */
@media (max-width: 768px) {
  .matchContainer {
    padding: 1rem;
  }

  .form {
    padding: 1.5rem;
  }

  .title {
    font-size: 2rem;
  }

  .buttonGroup {
    flex-direction: column;
  }

  .checkboxGroup,
  .multiSelect {
    grid-template-columns: 1fr;
  }
}

/* Animações */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideIn {
  from {
    transform: translateX(-20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}
  