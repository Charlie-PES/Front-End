/* Variáveis de cores - Usando as definidas no sistema de design */
/* As variáveis abaixo foram movidas para App.css para serem globais */
/*
:root {
  --color-primary: #dca879;
  --color-primary-dark: #bb8e68;
  --color-primary-light: #f0d5bb;
  --color-text: #333;
  --color-text-secondary: #666;
  --color-text-light: #fff;
  --color-background: #fff;
  --color-background-secondary: #f8f8f8;
  --color-card: #fff;
  --color-card-hover: #f8f8f8;
  --color-border: #eee;
  --color-border-dark: #ddd;
  --color-success: #4CAF50;
  --color-error: #f44336;
  --color-warning: #ff9800;
  --color-info: #2196F3;
  --spacing-xs: 0.25rem;
  --spacing-sm: 0.5rem;
  --spacing-md: 1rem;
  --spacing-lg: 1.5rem;
  --spacing-xl: 2rem;
  --spacing-xxl: 3rem;
  --border-radius-sm: 4px;
  --border-radius-md: 8px;
  --border-radius-lg: 15px;
  --border-radius-xl: 30px;
  --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.05);
  --shadow-md: 0 4px 8px rgba(0, 0, 0, 0.1);
  --shadow-lg: 0 8px 16px rgba(0, 0, 0, 0.1);
  --transition-fast: 150ms;
  --transition-normal: 300ms;
  --transition-slow: 500ms;
}
*/

/* Dark Mode */
.darkMode {
  /* Cores de Texto */
  --color-text: #fff;            /* Texto principal invertido */
  --color-text-secondary: #bbb;  /* Texto secundário invertido */
  --color-text-light: #333;      /* Texto sobre fundo claro */

  /* Cores de Fundo */
  --color-background: #1a1a1a;   /* Fundo principal escuro */
  --color-background-secondary: #2d2d2d; /* Fundo secundário escuro */
  --color-card: #2d2d2d;         /* Fundo dos cards escuro */
  --color-card-hover: #363636;   /* Hover dos cards escuro */

  /* Cores de Borda */
  --color-border: #404040;       /* Bordas escuras */
  --color-border-dark: #505050;  /* Bordas mais claras */
}

.adotarContainer {
  max-width: var(--container-max-width, 1200px);
  margin: 0 auto;
  padding: var(--spacing-lg);
  min-height: 100vh;
  background-color: var(--bg-color); /* Usar variável global */
  color: var(--text-color); /* Usar variável global */
  font-family: Arial, sans-serif;
  animation: fadeIn var(--transition-normal) var(--ease-in-out);
}

.searchContainer {
  display: flex;
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-lg);
  position: sticky;
  top: 0;
  z-index: 100;
  background-color: var(--bg-color); /* Usar variável global */
  padding: var(--spacing-md) 0;
  border-bottom: 1px solid var(--border-color); /* Usar variável global */
}

.searchBar {
  flex: 1;
  display: flex;
  align-items: center;
  background-color: var(--card-background); /* Usar variável global */
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-md) var(--spacing-lg);
  box-shadow: var(--card-shadow); /* Usar variável global */
  transition: all var(--transition-normal);
}

.searchBar:focus-within {
  box-shadow: var(--card-shadow); /* Usar variável global */
  border: 1px solid var(--primary-color); /* Usar variável global */
}

.searchIcon {
  color: var(--text-secondary); /* Usar variável global */
  margin-right: var(--spacing-sm);
  font-size: var(--font-size-body);
}

.searchBar input {
  flex: 1;
  border: none;
  background: none;
  color: var(--text-color); /* Usar variável global */
  font-size: var(--font-size-body);
  outline: none;
}

.searchBar input::placeholder {
  color: var(--text-secondary); /* Usar variável global */
}

.filterToggleBtn {
  display: none;
}

.mainContent {
  display: flex;
  gap: var(--spacing-lg);
  position: relative;
}

.sidebar {
  width: 280px;
  background-color: var(--card-background);
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-lg);
  box-shadow: var(--card-shadow);
  height: fit-content;
  position: sticky;
  top: 100px;
  transition: all var(--transition-normal);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
}

.sidebarHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.sidebarHeader h2 {
  font-size: var(--font-size-h4);
  color: var(--text-color);
  flex-grow: 1;
  text-align: center;
}

.filterHeaderTitle {
  position: relative;
  padding-bottom: 5px;
  width: 100%;
}

.filterHeaderTitle::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 3px;
  background-color: var(--primary-color);
  border-radius: 5px;
}

.closeFiltersBtn {
  display: none;
}

.filterGroup {
  /* margin-bottom: 2.5rem; <-- Removido, agora gerenciado pelo gap do sidebar */
}

.filterGroup label {
  display: block;
  margin-bottom: 0.8rem;
  font-weight: var(--font-weight-medium);
  color: var(--text-color);
}

.tipoButtons {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-md);
}

.todosButton {
  grid-column: span 2;
}

.tipoButton {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.3rem;
  padding: 0.5rem;
  background-color: var(--color-background-secondary);
  color: var(--text-color);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-md);
  cursor: pointer;
  transition: all var(--transition-normal);
  font-size: 0.8rem;
  white-space: nowrap;
  width: 100%;
}

.tipoButton:hover {
  background-color: var(--color-border-dark);
  transform: translateY(-2px);
}

.tipoButton.active {
  background-color: var(--color-primary-light);
  color: var(--text-color);
  border-color: var(--primary-color);
}

.filterGroup select {
  width: 100%;
  padding: var(--spacing-md);
  background-color: var(--color-card);
  color: var(--text-color);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-md);
  outline: none;
  transition: all var(--transition-normal);
  font-size: var(--font-size-body);
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23666%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13.2-5.4H18.6c-5%200-9.3%201.8-13.2%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2013.2l128%20127.9c3.9%203.9%208.7%205.8%2013.2%205.8s9.3-1.9%2013.2-5.8l128-127.9c3.6-3.9%205.4-8.7%205.4-13.2%200-5-1.8-9.3-5.4-13.2z%22%2F%3E%3C%2Fsvg%3E');
  background-repeat: no-repeat;
  background-position: right 0.8rem center;
  background-size: 0.8rem;
}

.filterGroup select:focus {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(var(--primary-rgb), 0.2);
}

.checkboxGroupTitle {
  margin: 0 0 10px 0;
  font-size: 16px;
  color: var(--text-color);
}

.checkboxGroup {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.checkboxLabel {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  cursor: pointer;
  color: var(--text-color);
  font-size: var(--font-size-body);
}

.checkboxInput {
  display: none;
}

.checkboxCustom {
  width: 20px;
  height: 20px;
  border: 2px solid var(--border-color);
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all var(--transition-normal);
  flex-shrink: 0;
}

.checkboxInput:checked + .checkboxCustom {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
}

.checkboxInput:checked + .checkboxCustom::after {
  content: '';
  width: 8px;
  height: 14px;
  border: solid var(--secondary-color);
  border-width: 0 3px 3px 0;
  transform: rotate(45deg);
}

.resetBtn {
  background-color: var(--error-color);
  color: var(--secondary-color);
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: var(--border-radius-md);
  font-size: var(--font-size-body);
  cursor: pointer;
  transition: all var(--transition-normal);
  width: 100%;
}

.resetBtn:hover {
  background-color: var(--error-color);
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

.petsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(290px, 1fr));
  gap: 2rem;
  padding: 1rem;
  animation: fadeInUp 0.8s ease-out forwards;
}

.petCard {
  background-color: var(--color-card);
  border-radius: var(--border-radius-lg);
  overflow: hidden;
  box-shadow: var(--shadow-md);
  transition: all var(--transition-normal);
  cursor: pointer;
  display: flex;
  flex-direction: column;
  height: 100%;
}

.petCard:hover {
  transform: translateY(-5px) scale(1.01);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
}

.petImageContainer {
  position: relative;
  width: 100%;
  height: 220px;
  overflow: hidden;
  border-bottom: 1px solid var(--border-color);
}

.petImageContainer img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform var(--transition-normal);
}

.petCard:hover .petImageContainer img {
  transform: scale(1.05);
}

.petTypeBadge {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background-color: var(--primary-color);
  color: white;
  padding: 0.4rem 0.8rem;
  border-radius: var(--border-radius-xl);
  font-size: 0.8rem;
  font-weight: 600;
  box-shadow: var(--shadow-sm);
}

.petInfo {
  padding: 1.2rem 1.5rem;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
}

.petInfo h3 {
  margin: 0 0 0.6rem;
  font-size: 1.35rem;
  color: var(--text-color);
}

.petDetails {
  display: flex;
  flex-wrap: wrap;
  gap: 0.6rem;
  margin-bottom: 0.8rem;
}

.petDetails span {
  background-color: var(--color-background-secondary);
  padding: 0.3rem 0.7rem;
  border-radius: var(--border-radius-lg);
  font-size: 0.85rem;
  color: var(--text-secondary);
}

.petLocation {
  display: flex;
  align-items: center;
  gap: 0.4rem;
  color: var(--text-secondary);
  font-size: 0.9rem;
  margin-top: auto;
}

.petLocation svg {
  color: var(--primary-color);
}

.petActions {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 1rem;
  padding-top: 1rem;
  border-top: 1px solid var(--border-color);
}

.favoriteBtn, .shareBtn {
  background: none;
  border: none;
  color: var(--text-secondary);
  font-size: 1.3rem;
  cursor: pointer;
  transition: color var(--transition-normal);
}

.favoriteBtn {
  color: var(--color-error);
}

.shareBtn {
  color: var(--color-info);
}

.favoriteBtn:hover, .shareBtn:hover {
  color: var(--primary-color);
}

.noResults {
  text-align: center;
  margin-top: 3rem;
  color: var(--text-secondary);
}

.noResultsIcon {
  font-size: 3rem;
  color: var(--primary-color);
  margin-bottom: 1rem;
}

.noResults p {
  font-size: 1.1rem;
}

.petModal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 2000;
}

.petModalContent {
  background-color: var(--card-background);
  border-radius: var(--border-radius-lg);
  width: 90%;
  max-width: 800px;
  max-height: 90vh;
  overflow-y: auto;
  position: relative;
  box-shadow: var(--shadow-lg);
  animation: slideIn var(--transition-normal) ease-out;
}

.closeModalBtn {
  position: absolute;
  top: var(--spacing-md);
  right: var(--spacing-md);
  background: none;
  border: none;
  font-size: 1.8rem;
  color: var(--text-color);
  cursor: pointer;
  z-index: 2010;
  transition: all var(--transition-normal);
}

.closeModalBtn:hover {
  color: var(--primary-color);
  transform: rotate(90deg);
}

.petModalImage {
  width: 100%;
  height: 300px;
  overflow: hidden;
  border-radius: var(--border-radius-lg) var(--border-radius-lg) 0 0;
}

.petModalImage img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.petModalInfo {
  padding: var(--spacing-lg);
}

.petModalInfo h2 {
  font-size: 2rem;
  color: var(--text-color);
  margin-bottom: var(--spacing-md);
}

.petModalDetails {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-lg);
}

.petModalDetail {
  background-color: var(--bg-color);
  padding: var(--spacing-md);
  border-radius: var(--border-radius-md);
  text-align: center;
  box-shadow: var(--shadow-sm);
}

.detailLabel {
  font-size: 0.9rem;
  color: var(--text-secondary);
  margin-bottom: 0.25rem;
}

.detailValue {
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--primary-color);
}

.petModalDescription {
  margin-top: var(--spacing-lg);
}

.petModalDescription h3 {
  font-size: 1.3rem;
  color: var(--text-color);
  margin-bottom: var(--spacing-sm);
}

.petModalDescription p {
  font-size: 1rem;
  line-height: 1.6;
  color: var(--text-color);
}

.petModalActions {
  padding: var(--spacing-lg);
  display: flex;
  gap: var(--spacing-md);
  border-top: 1px solid var(--border-color);
  margin-top: var(--spacing-lg);
}

.adotarBtn {
  flex: 1;
  padding: 1rem 2rem;
  background-color: var(--primary-color);
  color: var(--secondary-color);
  border: none;
  border-radius: var(--border-radius-md);
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all var(--transition-normal);
}

.adotarBtn:hover {
  background-color: var(--primary-dark);
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideIn {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@media (max-width: 1024px) {
  .adotarContainer {
    padding: var(--spacing-md);
  }

  .petsGrid {
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  }
}

@media (max-width: 768px) {
  .searchContainer {
    flex-direction: row-reverse; /* Troca a ordem para mobile */
    justify-content: flex-end;
    padding: var(--spacing-md) var(--spacing-lg);
  }

  .sidebar {
    position: fixed;
    top: 0;
    left: 0;
    width: 80%;
    max-width: 300px;
    height: 100%;
    transform: translateX(-100%);
    z-index: 1000;
    padding-top: var(--spacing-xxl);
    padding-bottom: var(--spacing-xxl);
    overflow-y: auto;
  }

  .sidebar.active {
    transform: translateX(0);
    box-shadow: 0 0 0 100vw rgba(0, 0, 0, 0.5); /* Overlay */
  }

  .closeFiltersBtn {
    display: block;
    position: absolute;
    top: var(--spacing-md);
    right: var(--spacing-md);
    background: none;
    border: none;
    font-size: 1.8rem;
    color: var(--text-color);
    cursor: pointer;
  }

  .filterToggleBtn {
    display: block;
    background-color: var(--primary-color);
    color: var(--secondary-color);
    border: none;
    padding: 0.75rem 1.2rem;
    border-radius: var(--border-radius-lg);
    font-size: 1.2rem;
    cursor: pointer;
    transition: all var(--transition-normal);
    box-shadow: var(--shadow-md);
  }

  .filterToggleBtn:hover {
    background-color: var(--primary-dark);
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
  }

  .filterGroup {
    /* Mantém o padding lateral já definido */
  }

  .petsGrid {
    grid-template-columns: 1fr;
    padding: 0.5rem;
    gap: 1.5rem;
  }

  .petCard {
    flex-direction: row;
    height: auto;
  }

  .petImageContainer {
    width: 150px;
    height: 150px;
    border-radius: var(--border-radius-md) 0 0 var(--border-radius-md);
    border-bottom: none;
    flex-shrink: 0;
  }

  .petImageContainer img {
    object-fit: contain;
    padding: 0.5rem;
  }

  .petTypeBadge {
    top: 0.5rem;
    right: 0.5rem;
    padding: 0.3rem 0.6rem;
    font-size: 0.7rem;
  }

  .petInfo {
    padding: 1rem;
  }

  .petInfo h3 {
    font-size: 1.15rem;
    margin-bottom: 0.4rem;
  }

  .petDetails {
    gap: 0.4rem;
    margin-bottom: 0.6rem;
  }

  .petDetails span {
    font-size: 0.8rem;
  }

  .petLocation {
    font-size: 0.85rem;
  }

  .petActions {
    margin-top: 0.8rem;
    padding-top: 0.8rem;
  }

  .favoriteBtn, .shareBtn {
    font-size: 1.2rem;
  }

  .petModalContent {
    width: 95%;
    max-height: 95vh;
  }

  .petModalImage {
    height: 200px;
  }

  .tipoButtons {
    grid-template-columns: 1fr;
  }

  .tipoButton {
    width: 100%;
  }

  .todosButton {
    grid-column: span 1;
  }
}

@media (max-width: 480px) {
  .adotarContainer {
    padding: var(--spacing-md);
  }

  .searchContainer {
    padding: var(--spacing-sm);
  }

  .sidebar {
    width: 90%;
    max-width: none;
  }

  .petsGrid {
    gap: var(--spacing-md);
  }

  .petModalDetails {
    grid-template-columns: 1fr;
  }

  .petModalActions {
    flex-direction: column;
  }

  .adotarBtn {
    width: 100%;
  }

  .petCard {
    flex-direction: column;
    height: auto;
  }

  .petImageContainer {
    width: 100%;
    height: 200px;
    border-radius: var(--border-radius-lg) var(--border-radius-lg) 0 0;
    border-bottom: 1px solid var(--border-color);
  }

  .petInfo {
    padding: 1rem;
  }
}

/* Dark Mode Styles */
.darkMode .adotarContainer {
  background-color: var(--dark-bg-color);
  color: var(--dark-text-color);
}

.darkMode .searchContainer {
  background-color: var(--dark-bg-color);
  border-bottom-color: var(--dark-border-color);
}

.darkMode .searchBar {
  background-color: var(--dark-card-background);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}

.darkMode .searchBar:focus-within {
  border-color: var(--dark-primary-color);
  box-shadow: 0 0 0 2px rgba(var(--primary-rgb), 0.3);
}

.darkMode .searchIcon {
  color: var(--dark-text-secondary);
}

.darkMode .searchBar input {
  color: var(--dark-text-color);
}

.darkMode .searchBar input::placeholder {
  color: var(--dark-text-secondary);
}

.darkMode .sidebar {
  background-color: var(--dark-card-background);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
}

.darkMode .sidebarHeader h2 {
  color: var(--dark-text-color);
}

.darkMode .filterGroup label {
  color: var(--dark-text-color);
}

.darkMode .tipoButton {
  background-color: var(--dark-background-secondary);
  border-color: var(--dark-border-color);
  color: var(--dark-text-color);
}

.darkMode .tipoButton:hover {
  background-color: var(--dark-border-dark);
}

.darkMode .tipoButton.active {
  background-color: var(--color-primary-dark); /* Ajustar para um marrom escuro no dark mode */
  color: var(--dark-text-color);
  border-color: var(--dark-primary-color);
}

.darkMode .filterGroup select {
  background-color: var(--dark-card-background);
  border-color: var(--dark-border-color);
  color: var(--dark-text-color);
  background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23bbb%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13.2-5.4H18.6c-5%200-9.3%201.8-13.2%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2013.2l128%20127.9c3.9%203.9%208.7%205.8%2013.2%205.8s9.3-1.9%2013.2-5.8l128-127.9c3.6-3.9%205.4-8.7%205.4-13.2%200-5-1.8-9.3-5.4-13.2z%22%2F%3E%3C%2Fsvg%3E'); /* Ícone de seta para dark mode */
}

.darkMode .filterGroup select:focus {
  border-color: var(--dark-primary-color);
  box-shadow: 0 0 0 2px rgba(var(--primary-rgb), 0.3);
}

.darkMode .checkboxGroupTitle {
  color: var(--dark-text-color);
}

.darkMode .checkboxLabel {
  color: var(--dark-text-color);
}

.darkMode .checkboxCustom {
  border-color: var(--dark-border-color);
}

.darkMode .checkboxInput:checked + .checkboxCustom {
  background-color: var(--dark-primary-color);
  border-color: var(--dark-primary-color);
}

.darkMode .checkboxInput:checked + .checkboxCustom::after {
  border-color: var(--dark-secondary-color);
}

.darkMode .resetBtn {
  background-color: var(--error-dark);
  color: var(--dark-secondary-color);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}

.darkMode .resetBtn:hover {
  background-color: var(--error-dark);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
}

.darkMode .filterHeaderTitle::after {
  background-color: var(--dark-primary-color);
}

