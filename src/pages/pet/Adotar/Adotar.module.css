/* Variáveis de cores - Usando as definidas no sistema de design */
/* As variáveis abaixo foram movidas para App.css para serem globais */
/*
:root {
  --color-primary: #dca879;
  --color-primary-dark: #bb8e68;
  --color-primary-light: #f0d5bb;
  --color-text: #333;
  --color-text-secondary: #666;
  --color-text-light: #fff;
  --color-background: #fff;
  --color-background-secondary: #f8f8f8;
  --color-card: #fff;
  --color-card-hover: #f8f8f8;
  --color-border: #eee;
  --color-border-dark: #ddd;
  --color-success: #4CAF50;
  --color-error: #f44336;
  --color-warning: #ff9800;
  --color-info: #2196F3;
  --spacing-xs: 0.25rem;
  --spacing-sm: 0.5rem;
  --spacing-md: 1rem;
  --spacing-lg: 1.5rem;
  --spacing-xl: 2rem;
  --spacing-xxl: 3rem;
  --border-radius-sm: 4px;
  --border-radius-md: 8px;
  --border-radius-lg: 15px;
  --border-radius-xl: 30px;
  --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.05);
  --shadow-md: 0 4px 8px rgba(0, 0, 0, 0.1);
  --shadow-lg: 0 8px 16px rgba(0, 0, 0, 0.1);
  --transition-fast: 150ms;
  --transition-normal: 300ms;
  --transition-slow: 500ms;
}
*/

/* Dark Mode */
.darkMode {
  /* Cores de Texto */
  --color-text: #fff;            /* Texto principal invertido */
  --color-text-secondary: #bbb;  /* Texto secundário invertido */
  --color-text-light: #333;      /* Texto sobre fundo claro */

  /* Cores de Fundo */
  --color-background: #1a1a1a;   /* Fundo principal escuro */
  --color-background-secondary: #2d2d2d; /* Fundo secundário escuro */
  --color-card: #2d2d2d;         /* Fundo dos cards escuro */
  --color-card-hover: #363636;   /* Hover dos cards escuro */

  /* Cores de Borda */
  --color-border: #404040;       /* Bordas escuras */
  --color-border-dark: #505050;  /* Bordas mais claras */
}

.adotarContainer {
  max-width: var(--container-max-width, 1200px);
  margin: 0 auto;
  padding: var(--spacing-lg);
  min-height: 100vh;
  background-color: var(--bg-color); /* Usar variável global */
  color: var(--text-color); /* Usar variável global */
  font-family: Arial, sans-serif;
  animation: fadeIn var(--transition-normal) var(--ease-in-out);
}

.searchContainer {
  display: flex;
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-lg);
  position: sticky;
  top: 0;
  z-index: 100;
  background-color: var(--bg-color); /* Usar variável global */
  padding: var(--spacing-md) 0;
  border-bottom: 1px solid var(--border-color); /* Usar variável global */
}

.searchBar {
  flex: 1;
  display: flex;
  align-items: center;
  background-color: var(--card-background); /* Usar variável global */
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-md) var(--spacing-lg);
  box-shadow: var(--card-shadow); /* Usar variável global */
  transition: all var(--transition-normal);
}

.searchBar:focus-within {
  box-shadow: var(--card-shadow); /* Usar variável global */
  border: 1px solid var(--primary-color); /* Usar variável global */
}

.searchIcon {
  color: var(--text-secondary); /* Usar variável global */
  margin-right: var(--spacing-sm);
  font-size: var(--font-size-body);
}

.searchBar input {
  flex: 1;
  border: none;
  background: none;
  color: var(--text-color); /* Usar variável global */
  font-size: var(--font-size-body);
  outline: none;
}

.searchBar input::placeholder {
  color: var(--text-secondary); /* Usar variável global */
}

.filterToggleBtn {
  display: none;
}

.mainContent {
  display: flex;
  gap: var(--spacing-lg);
  position: relative;
}

.sidebar {
  width: 280px;
  background-color: var(--card-background); /* Usar variável global */
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-lg);
  box-shadow: var(--card-shadow); /* Usar variável global */
  height: fit-content;
  position: sticky;
  top: 100px;
  transition: all var(--transition-normal);
}

.sidebarHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-lg);
}

.sidebarHeader h2 {
  margin: 0;
  font-size: var(--font-size-h4);
  color: var(--text-color); /* Usar variável global */
}

.closeFiltersBtn {
  display: none;
}

.filterGroup {
  margin-bottom: var(--spacing-lg);
}

.filterGroup label {
  display: block;
  margin-bottom: var(--spacing-sm);
  font-weight: var(--font-weight-medium);
  color: var(--text-color); /* Usar variável global */
}

.tipoButtons {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
  margin-bottom: var(--spacing-md);
}

.tipoBtn {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-sm);
  padding: var(--spacing-md);
  background-color: var(--bg-color); /* Usar variável global */
  color: var(--text-color); /* Usar variável global */
  border: none;
  border-radius: var(--border-radius-md);
  cursor: pointer;
  transition: all var(--transition-normal);
  font-size: var(--font-size-body);
}

.tipoBtn:hover {
  background-color: var(--primary-light); /* Usar variável global para hover mais claro */
  transform: translateY(-2px);
}

.tipoBtn.active {
  background-color: var(--primary-color); /* Usar variável global */
  color: var(--secondary-color); /* Usar variável global (branco) */
}

.filterGroup select {
  width: 100%;
  padding: var(--spacing-md);
  background-color: var(--input-background); /* Usar variável global */
  color: var(--text-color); /* Usar variável global */
  border: 1px solid var(--border-color); /* Usar variável global */
  border-radius: var(--border-radius-md);
  outline: none;
  transition: all var(--transition-normal);
  font-size: var(--font-size-body);
}

.filterGroup select:focus {
  border-color: var(--primary-color); /* Usar variável global */
  box-shadow: 0 0 0 2px rgba(var(--primary-rgb), 0.2); /* Usar variável RGB global */
}

.checkboxGroupTitle {
  margin: 0 0 10px 0;
  font-size: 16px;
  color: var(--text-color); /* Usar variável global */
}

.checkboxGroup {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.checkboxLabel {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  cursor: pointer;
  color: var(--text-color); /* Usar variável global */
  font-size: var(--font-size-body);
}

.checkboxInput {
  display: none;
}

.checkboxCustom {
  width: 20px;
  height: 20px;
  border: 2px solid var(--border-color); /* Usar variável global */
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all var(--transition-normal);
  flex-shrink: 0;
}

.checkboxInput:checked + .checkboxCustom {
  background-color: var(--primary-color); /* Usar variável global */
  border-color: var(--primary-color); /* Usar variável global */
}

.checkboxInput:checked + .checkboxCustom::after {
  content: '';
  width: 8px;
  height: 14px;
  border: solid var(--secondary-color); /* Usar variável global (branco) */
  border-width: 0 3px 3px 0;
  transform: rotate(45deg);
}

.resetBtn {
  background-color: var(--error-color); /* Usar variável global */
  color: var(--secondary-color); /* Usar variável global (branco) */
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: var(--border-radius-md);
  font-size: var(--font-size-body);
  cursor: pointer;
  transition: all var(--transition-normal);
  margin-top: var(--spacing-lg);
  width: 100%;
}

.resetBtn:hover {
  background-color: var(--error-color); /* Manter a cor de erro, mas talvez usar uma var(--error-dark) se houver */
  transform: translateY(-2px);
  box-shadow: var(--shadow-md); /* Usar variável global */
}

.petsGrid {
  flex: 1;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: var(--spacing-lg);
  padding: var(--spacing-md);
}

.petCard {
  background-color: var(--card-background); /* Usar variável global */
  border-radius: var(--border-radius-lg);
  overflow: hidden;
  box-shadow: var(--card-shadow); /* Usar variável global */
  transition: all var(--transition-normal);
  cursor: pointer;
}

.petCard:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-lg); /* Usar variável global */
}

.petImageContainer {
  position: relative;
  width: 100%;
  height: 200px;
  overflow: hidden;
}

.petImageContainer img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform var(--transition-normal);
}

.petCard:hover .petImageContainer img {
  transform: scale(1.05);
}

.petTypeBadge {
  position: absolute;
  top: var(--spacing-sm);
  left: var(--spacing-sm);
  background-color: var(--primary-color); /* Usar variável global */
  color: var(--secondary-color); /* Usar variável global (branco) */
  padding: 0.3rem 0.6rem;
  border-radius: var(--border-radius-md);
  font-size: 0.8rem;
  font-weight: 600;
}

.petInfo {
  padding: var(--spacing-md);
}

.petInfo h3 {
  margin: 0 0 var(--spacing-sm) 0;
  font-size: 1.3rem;
  color: var(--text-color); /* Usar variável global */
}

.petDetails {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-sm);
  margin-bottom: var(--spacing-sm);
}

.petDetails span {
  background-color: var(--bg-color); /* Usar variável global */
  color: var(--text-secondary); /* Usar variável global */
  padding: 0.3rem 0.6rem;
  border-radius: var(--border-radius-md);
  font-size: 0.85rem;
}

.petLocation {
  display: flex;
  align-items: center;
  gap: 0.3rem;
  color: var(--text-secondary); /* Usar variável global */
  font-size: 0.9rem;
  margin-bottom: var(--spacing-md);
}

.petActions {
  display: flex;
  gap: var(--spacing-sm);
  padding: 0 var(--spacing-md) var(--spacing-md);
}

.favoriteBtn, .shareBtn {
  flex: 1;
  padding: 0.75rem;
  border-radius: var(--border-radius-md);
  font-size: 1rem;
  cursor: pointer;
  transition: all var(--transition-normal);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.favoriteBtn {
  background-color: var(--primary-color); /* Usar variável global */
  color: var(--secondary-color); /* Usar variável global (branco) */
  border: none;
}

.shareBtn {
  background-color: var(--bg-color); /* Usar variável global */
  color: var(--text-color); /* Usar variável global */
  border: 1px solid var(--border-color); /* Usar variável global */
}

.favoriteBtn:hover, .shareBtn:hover {
  background-color: var(--primary-dark); /* Usar variável global */
  color: var(--secondary-color); /* Usar variável global (branco) */
}

.noResults {
  text-align: center;
  padding: var(--spacing-xxl);
  color: var(--text-secondary); /* Usar variável global */
}

.noResultsIcon {
  font-size: 3rem;
  margin-bottom: var(--spacing-md);
  color: var(--primary-color); /* Usar variável global */
}

.noResults p {
  font-size: 1.1rem;
  color: var(--text-secondary); /* Usar variável global */
}

.petModal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5); /* Manter rgba para overlay */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 2000;
}

.petModalContent {
  background-color: var(--card-background); /* Usar variável global */
  border-radius: var(--border-radius-lg);
  width: 90%;
  max-width: 800px;
  max-height: 90vh;
  overflow-y: auto;
  position: relative;
  box-shadow: var(--shadow-lg); /* Usar variável global */
  animation: slideIn var(--transition-normal) ease-out;
}

.closeModalBtn {
  position: absolute;
  top: var(--spacing-md);
  right: var(--spacing-md);
  background: none;
  border: none;
  font-size: 1.8rem;
  color: var(--text-color); /* Usar variável global */
  cursor: pointer;
  z-index: 2010;
  transition: all var(--transition-normal);
}

.closeModalBtn:hover {
  color: var(--primary-color); /* Usar variável global */
  transform: rotate(90deg);
}

.petModalImage {
  width: 100%;
  height: 300px;
  overflow: hidden;
  border-radius: var(--border-radius-lg) var(--border-radius-lg) 0 0;
}

.petModalImage img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.petModalInfo {
  padding: var(--spacing-lg);
}

.petModalInfo h2 {
  font-size: 2rem;
  color: var(--text-color); /* Usar variável global */
  margin-bottom: var(--spacing-md);
}

.petModalDetails {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-lg);
}

.petModalDetail {
  background-color: var(--bg-color); /* Usar variável global */
  padding: var(--spacing-md);
  border-radius: var(--border-radius-md);
  text-align: center;
  box-shadow: var(--shadow-sm); /* Usar variável global */
}

.detailLabel {
  font-size: 0.9rem;
  color: var(--text-secondary); /* Usar variável global */
  margin-bottom: 0.25rem;
}

.detailValue {
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--primary-color); /* Usar variável global */
}

.petModalDescription {
  margin-top: var(--spacing-lg);
}

.petModalDescription h3 {
  font-size: 1.3rem;
  color: var(--text-color); /* Usar variável global */
  margin-bottom: var(--spacing-sm);
}

.petModalDescription p {
  font-size: 1rem;
  line-height: 1.6;
  color: var(--text-color); /* Usar variável global */
}

.petModalActions {
  padding: var(--spacing-lg);
  display: flex;
  gap: var(--spacing-md);
  border-top: 1px solid var(--border-color); /* Usar variável global */
  margin-top: var(--spacing-lg);
}

.adotarBtn {
  flex: 1;
  padding: 1rem 2rem;
  background-color: var(--primary-color); /* Usar variável global */
  color: var(--secondary-color); /* Usar variável global (branco) */
  border: none;
  border-radius: var(--border-radius-md);
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all var(--transition-normal);
}

.adotarBtn:hover {
  background-color: var(--primary-dark); /* Usar variável global */
  transform: translateY(-2px);
  box-shadow: var(--shadow-md); /* Usar variável global */
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideIn {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@media (max-width: 1024px) {
  .adotarContainer {
    padding: var(--spacing-md);
  }

  .petsGrid {
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  }
}

@media (max-width: 768px) {
  .searchContainer {
    flex-direction: column;
    padding: var(--spacing-md);
  }

  .sidebar {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    border-radius: 0;
    transform: translateX(-100%);
    transition: transform var(--transition-normal) ease-in-out;
    z-index: 1000;
    padding: var(--spacing-lg);
    box-sizing: border-box;
  }

  .sidebar.active {
    transform: translateX(0);
  }

  .petsGrid {
    grid-template-columns: 1fr;
  }

  .petModalContent {
    width: 95%;
    max-height: 95vh;
  }

  .petModalImage {
    height: 200px;
  }
}

@media (max-width: 480px) {
  .adotarContainer {
    padding: var(--spacing-sm);
  }

  .petsGrid {
    gap: var(--spacing-md);
  }

  .petModalDetails {
    grid-template-columns: 1fr;
  }

  .petModalActions {
    flex-direction: column;
  }

  .adotarBtn {
    width: 100%;
  }
}

/* Dark Mode Styles */
.darkMode .adotarContainer {
  background-color: var(--dark-bg-color);
  color: var(--dark-text-color);
}

.darkMode .searchContainer {
  background-color: var(--dark-bg-color);
  border-bottom-color: var(--dark-border-color);
}

.darkMode .searchBar {
  background-color: var(--dark-card-background);
  box-shadow: var(--card-shadow);
}

.darkMode .searchIcon {
  color: var(--dark-text-secondary);
}

.darkMode .searchBar input {
  color: var(--dark-text-color);
}

.darkMode .searchBar input::placeholder {
  color: var(--dark-text-secondary);
}

.darkMode .sidebar {
  background-color: var(--dark-card-background);
  box-shadow: var(--card-shadow);
}

.darkMode .sidebarHeader h2 {
  color: var(--dark-text-color);
}

.darkMode .filterGroup label {
  color: var(--dark-text-color);
}

.darkMode .tipoBtn {
  background-color: var(--dark-bg-color);
  color: var(--dark-text-color);
}

.darkMode .tipoBtn:hover {
  background-color: var(--dark-primary-light);
}

.darkMode .tipoBtn.active {
  background-color: var(--dark-primary-color);
  color: var(--dark-secondary-color);
}

.darkMode .filterGroup select {
  background-color: var(--dark-input-background);
  color: var(--dark-text-color);
  border-color: var(--dark-border-color);
}

.darkMode .filterGroup select:focus {
  border-color: var(--dark-primary-color);
  box-shadow: 0 0 0 2px rgba(var(--primary-rgb), 0.2); /* Usar variável RGB para o dark mode */
}

.darkMode .checkboxGroupTitle {
  color: var(--dark-text-color);
}

.darkMode .checkboxLabel {
  color: var(--dark-text-color);
}

.darkMode .checkboxCustom {
  border-color: var(--dark-border-color);
}

.darkMode .checkboxInput:checked + .checkboxCustom {
  background-color: var(--dark-primary-color);
  border-color: var(--dark-primary-color);
}

.darkMode .checkboxInput:checked + .checkboxCustom::after {
  border-color: var(--dark-secondary-color);
}

.darkMode .resetBtn {
  background-color: var(--error-dark); /* Usar uma variável para erro no dark mode */
  color: var(--dark-secondary-color);
  box-shadow: var(--card-shadow);
}

.darkMode .resetBtn:hover {
  background-color: var(--error-color);
}

.darkMode .petCard {
  background-color: var(--dark-card-background);
  box-shadow: var(--card-shadow);
}

.darkMode .petCard:hover {
  box-shadow: var(--shadow-lg);
}

.darkMode .petTypeBadge {
  background-color: var(--dark-primary-color);
  color: var(--dark-secondary-color);
}

.darkMode .petInfo h3 {
  color: var(--dark-text-color);
}

.darkMode .petDetails span {
  background-color: var(--dark-bg-color);
  color: var(--dark-text-secondary);
}

.darkMode .petLocation {
  color: var(--dark-text-secondary);
}

.darkMode .favoriteBtn {
  background-color: var(--dark-primary-color);
  color: var(--dark-secondary-color);
}

.darkMode .shareBtn {
  background-color: var(--dark-bg-color);
  color: var(--dark-text-color);
  border-color: var(--dark-border-color);
}

.darkMode .favoriteBtn:hover, .darkMode .shareBtn:hover {
  background-color: var(--dark-primary-dark);
  color: var(--dark-secondary-color);
}

.darkMode .noResults {
  color: var(--dark-text-secondary);
}

.darkMode .noResultsIcon {
  color: var(--dark-primary-color);
}

.darkMode .noResults p {
  color: var(--dark-text-secondary);
}

.darkMode .petModalContent {
  background-color: var(--dark-card-background);
  box-shadow: var(--shadow-lg);
}

.darkMode .closeModalBtn {
  color: var(--dark-text-color);
}

.darkMode .closeModalBtn:hover {
  color: var(--dark-primary-color);
}

.darkMode .petModalInfo h2 {
  color: var(--dark-text-color);
}

.darkMode .petModalDetail {
  background-color: var(--dark-bg-color);
  box-shadow: var(--shadow-sm);
}

.darkMode .detailLabel {
  color: var(--dark-text-secondary);
}

.darkMode .detailValue {
  color: var(--dark-primary-color);
}

.darkMode .petModalDescription h3 {
  color: var(--dark-text-color);
}

.darkMode .petModalDescription p {
  color: var(--dark-text-color);
}

.darkMode .petModalActions {
  border-top-color: var(--dark-border-color);
}

.darkMode .adotarBtn {
  background-color: var(--dark-primary-color);
  color: var(--dark-secondary-color);
}

.darkMode .adotarBtn:hover {
  background-color: var(--dark-primary-dark);
  box-shadow: var(--shadow-md);
}

